#!/bin/bash
# 
# Input RA Dec
# Output uv_shift-ed uvtable
# pdbi-uvt-go-shift -name split_GN11_spw38.uvt -radec 12:36:27.552 62:12:17.81
# 
PdBIUVT_NAME=()
PdBIUVT_SAVE=()
PdBIUVT_SIZE="30"
PdBIUVT_MAP_RA=""
PdBIUVT_MAP_DEC=""
PdBIUVT_MAP_ANGLE="0"
# LANG
LANG=C




# 
# Read input parameters
# 
PdBIUVT_GOOD=0; if [[ "$#" -gt 0 ]]; then PdBIUVT_GOOD=1; fi
PdBIUVT_RPAR=""
while [[ "$#" -gt 0 ]]; do
    #echo $1 "$#"
    case $1 in
          "-size") if [[ "$#" -lt 2 ]]; then PdBIUVT_GOOD=0; break; fi; shift; PdBIUVT_RPAR=""; PdBIUVT_SIZE="$1";;
         "-radec") if [[ "$#" -lt 3 ]]; then PdBIUVT_GOOD=0; break; fi; shift; PdBIUVT_RPAR=""; PdBIUVT_MAP_RA="$1"; PdBIUVT_MAP_DEC="$2";;
         "-angle") if [[ "$#" -lt 3 ]]; then PdBIUVT_GOOD=0; break; fi; shift; PdBIUVT_RPAR=""; PdBIUVT_MAP_ANGLE="$1";; 
          "-name") if [[ "$#" -lt 2 ]]; then PdBIUVT_GOOD=0; break; fi; shift; PdBIUVT_RPAR="name";;
          "-save") if [[ "$#" -lt 2 ]]; then PdBIUVT_GOOD=0; break; fi; shift; PdBIUVT_RPAR="save";;
           "-out") if [[ "$#" -lt 2 ]]; then PdBIUVT_GOOD=0; break; fi; shift; PdBIUVT_RPAR="save";;
    esac
    if [[ "$PdBIUVT_RPAR" == "name" ]];  then 
        PdBIUVT_NAME=("${PdBIUVT_NAME[@]}" "$1")
    fi
    if [[ "$PdBIUVT_RPAR" == "save" ]];  then 
        PdBIUVT_SAVE=("${PdBIUVT_SAVE[@]}" "$1")
    fi
    shift
done
# 
# Check input parameters -- if not passed then print usage and exit
# 
if [[ $PdBIUVT_GOOD -eq 0 || x"$PdBIUVT_MAP_RA" == x"" || x"$PdBIUVT_MAP_DEC" == x"" ]]; then
    echo "Usage: "
    echo "   pdbi-uvt-go-shift -name UV_TABLE_NAME_1 UV_TABLE_NAME_2 [UV_TABLE_NAME_3 [UV_TABLE_NAME_4]] -radec NNN:NN:NN.NN NN:NN:NN.N -out UV_TABLE_NEW"
    exit
fi
# 
# Print input uvtable list
# 
echo PdBIUVT_NAME=${PdBIUVT_NAME[*]}
echo PdBIUVT_SAVE=${PdBIUVT_SAVE[*]}
# 
# Revise input parameters
# 
for (( PdBIUVT_ITER = 0; PdBIUVT_ITER < "${#PdBIUVT_NAME[@]}"; PdBIUVT_ITER++ )); do
    # -- remove the suffix of the input uvtable name, and test whether the file exists
    if [[ "${PdBIUVT_NAME[$PdBIUVT_ITER]}" == *".uvt" ]]; then
        PdBIUVT_NAME[$PdBIUVT_ITER]=$(echo "${PdBIUVT_NAME[$PdBIUVT_ITER]}" | sed -E 's/[.]uvt$//g')
    fi
    if [[ ! -f "${PdBIUVT_NAME[$PdBIUVT_ITER]}.uvt" ]]; then
        echo "Error! \"${PdBIUVT_NAME[$PdBIUVT_ITER]}.uvt\" was not found! Exit!"
        exit
    fi
    # -- set output uvtable name, and check whether it exists
    if [[ ${#PdBIUVT_SAVE[@]} -le $PdBIUVT_ITER ]]; then
        echo "Warning! Output uv table name not defined, we will set the output file as ${PdBIUVT_NAME[$PdBIUVT_ITER]}-Shifted.uvt!"
        PdBIUVT_SAVE=(${PdBIUVT_SAVE[@]} ${PdBIUVT_NAME[$PdBIUVT_ITER]}-Shifted)
    fi
    if [[ "${PdBIUVT_SAVE[$PdBIUVT_ITER]}" == *".uvt" ]]; then
        PdBIUVT_SAVE[$PdBIUVT_ITER]=$(echo ${PdBIUVT_SAVE[$PdBIUVT_ITER]} | sed -e 's/\.uvt$//g')
    fi
    # TODO will overwrite, give warning?
done
# -- convert RA DEC format
if [[ "$PdBIUVT_MAP_RA" != *":"*":"* ]]; then
    echo "Error! Please give RA Dec in sexagesimal format!"
    exit 1
fi
if [[ "$PdBIUVT_MAP_DEC" != *":"*":"* ]]; then
    echo "Error! Please give RA Dec in sexagesimal format!"
    exit 1
fi



# 
# loop each uv table to run uv_shift
# 
for (( PdBIUVT_ITER = 0; PdBIUVT_ITER < "${#PdBIUVT_NAME[@]}"; PdBIUVT_ITER++ )); do
    # 
    # prepare gildas/mapping init and script and run
    # 
    # "let name ${PdBIUVT_NAME[$PdBIUVT_ITER]}"
    # "let map_ra ${PdBIUVT_MAP_RA}"
    # "let map_dec ${PdBIUVT_MAP_DEC}"
    # 
    #PdBIUVT_TEMP_INIT="${PdBIUVT_SAVE[$PdBIUVT_ITER]}.init"
    #PdBIUVT_TEMP_EXEC="${PdBIUVT_SAVE[$PdBIUVT_ITER]}.map"
    #PdBIUVT_TEMP_LOGT="${PdBIUVT_SAVE[$PdBIUVT_ITER]}.log"
    PdBIUVT_TEMP_INIT="${PdBIUVT_SAVE[$PdBIUVT_ITER]}.uvt.uv_shift.init"
    PdBIUVT_TEMP_EXEC="${PdBIUVT_SAVE[$PdBIUVT_ITER]}.uvt.uv_shift.map"
    PdBIUVT_TEMP_LOGT="${PdBIUVT_SAVE[$PdBIUVT_ITER]}.uvt.uv_shift.log"
    cp "${PdBIUVT_NAME[$PdBIUVT_ITER]}.uvt" "${PdBIUVT_SAVE[$PdBIUVT_ITER]}.uvt"
    echo  '! '                                                                                                             > $PdBIUVT_TEMP_INIT
    echo  '! Task UV_SHIFT'                                                                                               >> $PdBIUVT_TEMP_INIT
    echo  '! 6 parameters needed for all functions'                                                                       >> $PdBIUVT_TEMP_INIT
    echo  '!'                                                                                                             >> $PdBIUVT_TEMP_INIT
    echo  'TASK\CHARACTER "UV table 1"                             UVTABLE$      "'${PdBIUVT_SAVE[$PdBIUVT_ITER]}.uvt'"'  >> $PdBIUVT_TEMP_INIT
    echo  'TASK\LOGICAL   "Offset mode YES or Absolute mode NO"   RELATIVE$       ' NO                                    >> $PdBIUVT_TEMP_INIT
    echo  'TASK\REAL      "Offset mode offset by radians"           OFFSET$[2]    ' 0 0                                   >> $PdBIUVT_TEMP_INIT
    echo  'TASK\CHARACTER "Absolute mode RA center"              RA_CENTER$      "'$PdBIUVT_MAP_RA'"'                     >> $PdBIUVT_TEMP_INIT
    echo  'TASK\CHARACTER "Absolute mode DEC center"            DEC_CENTER$      "'$PdBIUVT_MAP_DEC'"'                    >> $PdBIUVT_TEMP_INIT
    echo  'TASK\REAL      "Angle"                                    ANGLE$       '$PdBIUVT_MAP_ANGLE                     >> $PdBIUVT_TEMP_INIT
    echo  'TASK\LOGICAL   "Accuracy"                               PRECISE$       ' YES                                   >> $PdBIUVT_TEMP_INIT
    echo  'TASK\GO'                                                                                                       >> $PdBIUVT_TEMP_INIT
    echo  "run uv_shift $PdBIUVT_TEMP_INIT /NOWINDOW"  >> $PdBIUVT_TEMP_EXEC
    echo  "@$PdBIUVT_TEMP_EXEC  |  mapping  > ""$PdBIUVT_TEMP_LOGT"
    echo  "@$PdBIUVT_TEMP_EXEC" |  mapping  >  "$PdBIUVT_TEMP_LOGT"
    
    echo "Successufully saved to ${PdBIUVT_SAVE[$PdBIUVT_ITER]}.uvt"
    
done



