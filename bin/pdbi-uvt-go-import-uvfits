#!/bin/bash
# 
# Input uvfits
# Output uvt
# 
# Last update:
#    2017-02-19 rewritten, beautified, used "pdbi-uvt-core-arg"
#    2017-03-30 using "pdbi-uvt-core-arg-v4"
# 
# 



# CHECK wcstools gethead
if [[ $(type gethead 2>/dev/null | wc -l) -eq 0 ]]; then
    echo "Error! WCSTOOLS gethead not found! Exit!"
    exit 1
fi



# 
# Uage
# 
usage() {
    echo "Usage: "
    echo "  pdbi-uvt-go-import-uvfits -name NAME.uvfits [NAME_2.uvfits [NAME_3.fits]]"
    echo ""
}



# 
# SOURCE pdbi-uvt-core-arg
# 
if [[ -f $(dirname "${BASH_SOURCE[0]}")"/pdbi-uvt-core-arg-v7" ]]; then
    source $(dirname "${BASH_SOURCE[0]}")"/pdbi-uvt-core-arg-v7" "$@"
else
    echo ""
    echo "Error! Could not find \""$(dirname "${BASH_SOURCE[0]}")"/pdbi-uvt-core-arg-v7\"!"
    echo ""
    exit 1
fi



# 
# Check input parameters -- uvt file name, ra dec
# 
if [[ ${#PdBIUVT_NAME[@]} -eq 0 ]]; then
    usage; exit
fi



# 
# Loop input uv fits
# 
for (( i = 0; i < "${#PdBIUVT_NAME[@]}"; i++ )); do
    # 
    # if type is uvfits
    # 
    if [[ ${PdBIUVT_TYPE[i]} == "uvfits" || ${PdBIUVT_TYPE[i]} == "UVFITS" || ${PdBIUVT_TYPE[i]} == "fits" || ${PdBIUVT_TYPE[i]} == "FITS" ]]; then
        # 
        # Set default output file name
        # 
        if [[ ${#PdBIUVT_SAVE[@]} -le $i ]]; then
            PdBIUVT_SAVE+=("${PdBIUVT_NAME[i]}")
        fi
        if [[ x"${PdBIUVT_SAVE[i]}" == x || x"${PdBIUVT_SAVE[i]}" == x"tmp_pdbi_uvt" ]]; then 
            PdBIUVT_SAVE[i]="${PdBIUVT_NAME[i]}"
            echo ""; echo "Warning! Output name was not given for the input uvfits \"${PdBIUVT_NAME[i]}.${PdBIUVT_TYPE[i]}\", setting to \"${PdBIUVT_SAVE[i]}.uvt\""; echo ""
        fi
        # 
        # Remove suffix
        # 
        if [[ x"${PdBIUVT_SAVE[i]}" == x*".uvt" ]]; then
            PdBIUVT_SAVE[i]=$(echo "${PdBIUVT_SAVE[i]}" | sed -e 's/\.uvt$//g')
        fi
        if [[ x"${PdBIUVT_SAVE[i]}" == x*".UVT" ]]; then
            PdBIUVT_SAVE[i]=$(echo "${PdBIUVT_SAVE[i]}" | sed -e 's/\.UVT$//g')
        fi
        # 
        # Backup existing output file
        # 
        if [[ -f "${PdBIUVT_SAVE[i]}.uvt" ]]; then
            if [[ -f "${PdBIUVT_SAVE[i]}.uvt.backup" ]]; then
                \rm "${PdBIUVT_SAVE[i]}.uvt.backup"
            fi
            echo "Warning! Found existing \"${PdBIUVT_SAVE[i]}.uvt\"! Backup as \"${PdBIUVT_SAVE[i]}.uvt.backup\"!"
            mv "${PdBIUVT_SAVE[i]}.uvt" "${PdBIUVT_SAVE[i]}.uvt.backup"
        fi
        # 
        # Deal with the input uvfits file
        # Output to mapping script
        # "${PdBIUVT_SAVE[i]}.uvt.import.uvfits.script"
        # 
        PdBIUVT_EXE="${PdBIUVT_SAVE[i]}.uvt.import.uvfits.script"
        PdBIUVT_LOG="${PdBIUVT_SAVE[i]}.uvt.import.uvfits.log"
        PdBIUVT_INI="${PdBIUVT_SAVE[i]}.uvt.import.uvfits.init"
        PdBIUVT_GETHEAD="${PdBIUVT_SAVE[i]}.uvt.import.uvfits.gethead"
        PdBIUVT_SETHEAD="${PdBIUVT_SAVE[i]}.uvt.import.uvfits.sethead"
        
        echo "! GILDAS script" >  "$PdBIUVT_EXE"
        echo "# gethead" >  "$PdBIUVT_GETHEAD"
        echo "# sethead" >  "$PdBIUVT_SETHEAD"
        
        echo "Checking \"${PdBIUVT_NAME[i]}.${PdBIUVT_TYPE[i]}\" frequencies"
        PdBIUVT_CRVAL4=$(gethead "${PdBIUVT_NAME[i]}.${PdBIUVT_TYPE[i]}" "CRVAL4")
        PdBIUVT_CRPIX4=$(gethead "${PdBIUVT_NAME[i]}.${PdBIUVT_TYPE[i]}" "CRPIX4")
        PdBIUVT_RESTFREQ=$(gethead "${PdBIUVT_NAME[i]}.${PdBIUVT_TYPE[i]}" "RESTFREQ")
        if [[ x"$PdBIUVT_RESTFREQ" == x ]]; then PdBIUVT_RESTFREQ="0"; fi #<added><20170304><dzliu># 
        echo "CRVAL4   = $PdBIUVT_CRVAL4"   >> "$PdBIUVT_GETHEAD"
        echo "CRPIX4   = $PdBIUVT_CRPIX4"   >> "$PdBIUVT_GETHEAD"
        echo "RESTFREQ = $PdBIUVT_RESTFREQ" >> "$PdBIUVT_GETHEAD"
        cat "$PdBIUVT_GETHEAD"
        # 
        # 
        # Read user input -ref-freq (or -freq-ref, or -Ch0-MHz), which is the ref channel obs-frame frequency in unit of MHz.
        # 
        if [[ $i -lt ${#PdBIUVT_FREQ_REF[@]}  ]]; then
            #list_of_spw_id=($(awk '/Spectral Windows:/ {f=1; next} /Sources:/ {f=0} f' "calibrated.ms.listobs.txt" | grep -v "SpwID" | sed -e 's/^ *//g' | tr -s ' ' | cut -d ' ' -f 1))
            #list_of_spw_nchan=($(awk '/Spectral Windows:/ {f=1; next} /Sources:/ {f=0} f' "calibrated.ms.listobs.txt" | grep -v "SpwID" | sed -e 's/^ *//g' | tr -s ' ' | cut -d ' ' -f 3))
            #list_of_spw_nchan=($(awk '/Spectral Windows:/ {f=1; next} /Sources:/ {f=0} f' "calibrated.ms.listobs.txt" | grep -v "SpwID" | sed -e 's/^ *//g' | tr -s ' ' | cut -d ' ' -f 3))
            PdBIUVT_CRVAL4=$(awk "BEGIN {printf \"%0.10e\", ${PdBIUVT_FREQ_REF[i]} * 1e6;}") # convert MHz to Hz
            echo "sethead \"${PdBIUVT_NAME[i]}.${PdBIUVT_TYPE[i]}\" CRVAL4=$PdBIUVT_CRVAL4" >> "$PdBIUVT_SETHEAD"
                  sethead  "${PdBIUVT_NAME[i]}.${PdBIUVT_TYPE[i]}"  CRVAL4=$PdBIUVT_CRVAL4
            cat "$PdBIUVT_SETHEAD"
        fi
        # 
        # 
        # Check whether ($PdBIUVT_CRVAL4) equals ($PdBIUVT_RESTFREQ), if not, then we set RESTFREQ = CRVAL4
        # note that for float number comparison, we choose a 0.001 fractional precesion. 
        # 
        #echo "BEGIN {val=(($PdBIUVT_CRVAL4)-($PdBIUVT_RESTFREQ))/((($PdBIUVT_CRVAL4)+($PdBIUVT_RESTFREQ))/2.0); print (val>0)?(val<0.001):(-val<0.001)}"
        PdBIUVT_CHECK=$(awk "BEGIN {val=(($PdBIUVT_CRVAL4)-($PdBIUVT_RESTFREQ))/((($PdBIUVT_CRVAL4)+($PdBIUVT_RESTFREQ))/2.0); print (val>0)?(val<0.001):(-val<0.001)}")
        if [[ $PdBIUVT_CHECK -eq 0 ]]; then
            echo "sethead \"${PdBIUVT_NAME[i]}.${PdBIUVT_TYPE[i]}\" RESTFREQ=$PdBIUVT_CRVAL4" >> "$PdBIUVT_SETHEAD"
                  sethead  "${PdBIUVT_NAME[i]}.${PdBIUVT_TYPE[i]}"  RESTFREQ=$PdBIUVT_CRVAL4
            cat "$PdBIUVT_SETHEAD"
        fi
        
        
        echo "Converting \"${PdBIUVT_NAME[i]}.${PdBIUVT_TYPE[i]}\" to \"${PdBIUVT_SAVE[i]}.uvt\""
        echo "FITS \"${PdBIUVT_NAME[i]}.${PdBIUVT_TYPE[i]}\" TO \"${PdBIUVT_SAVE[i]}.uvt\" /STYLE CASA" >> "$PdBIUVT_EXE"
        
        
        echo "Running @$PdBIUVT_EXE in GILDAS mapping"
        echo "@$PdBIUVT_EXE" | mapping -nw -nl > "$PdBIUVT_LOG"
        
        
        echo "Successfully saved to ${PdBIUVT_SAVE[i]}.uvt!"
        echo "--"
        
    fi
    
done

















