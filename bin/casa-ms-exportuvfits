#!/bin/bash
# 
# Input field or name
# Output python script file which runs CASA exportuvfits() task
# 
# Last update:
#    2016-02-09 created, copied from casa-ms-exportfits
# 



# Function to print usage
function usage() {
    echo "Usage: casa-ms-exportuvfits -image aaa -out aaa.fits"
}



# 
# Read input parameters
# 
. $(dirname ${BASH_SOURCE[0]})/"casa-command-line-arguments" "$@"



# 
# Check input parameter -- image
# 
if [[ ${#CASA_INP_VIS[@]} -eq 0 ]]; then usage; exit; fi



# 
# Write run_casa_ms_exportuvfits.py
# 
CASAMS_EXE="run_casa_ms_exportuvfits.py"
CASAMS_LOG="run_casa_ms_exportuvfits.log"
echo "#!/bin/python" > "$CASAMS_EXE"
for (( i=0; i<${#CASA_INP_VIS[@]}; i++ )); do
    if [[ $i -lt ${#CASA_INP_OUTPUT[@]} ]]; then
        TempOutput=${CASA_INP_OUTPUT[i]}
    else
        TempOutput="${CASA_INP_VIS[i]}.fits"
    fi
    echo "vis         = '${CASA_INP_VIS[i]}'"           >> "$CASAMS_EXE"
    echo "fitsfile    = '$TempOutput'"                  >> "$CASAMS_EXE"
    
    if [[ $i -lt ${#CASA_INP_FIELD[@]} ]]; then
        TempField="${CASA_INP_FIELD[i]}"
    else
        TempField=""
    fi
    echo "field       = '$TempField'"                   >> "$CASAMS_EXE"
    
    if [[ $i -lt ${#CASA_INP_SPW[@]} ]]; then
        TempSpw="${CASA_INP_SPW[i]}"
    else
        TempSpw=""
    fi
    echo "spw         = '$TempSpw'"                     >> "$CASAMS_EXE"
    
    if [[ $i -lt ${#CASA_INP_OVERWRITE[@]} ]]; then
        TempOverwrite="${CASA_INP_OVERWRITE[i]}"
    else
        TempOverwrite="False"
    fi
    echo "overwrite   =  $TempOverwrite"                >> "$CASAMS_EXE"
    
    echo "combinespw  =  False"                         >> "$CASAMS_EXE"
    echo "multisource =  False"                         >> "$CASAMS_EXE"
    echo "inp(exportuvfits)"                            >> "$CASAMS_EXE"
    echo "exportuvfits()"                               >> "$CASAMS_EXE"
    echo ""                                             >> "$CASAMS_EXE"
done
echo "Wrote to python script: ${CASAMS_EXE}"



# 
# run casa now
# 
if [[ $CASA_INP_NO -eq 0 ]]; then
    
    CASAMS_GOO="y"
    if [[ $CASA_INP_YES -eq 0 ]]; then
        read -e -p "Launch casa now? " -i "y" CASAMS_GOO
    else
        echo "Launching casa "
    fi
    if [[ x"$CASAMS_GOO" == x"y"* || x"$CASAMS_GOO" == x"Y"* ]]; then
    	echo "casa --nogui --nologfile -c ${CASAMS_EXE} | tee ${CASAMS_LOG}"
    	casa --nogui --nologfile -c "${CASAMS_EXE}" | tee "${CASAMS_LOG}"
    fi
else
    echo "OK, we will not run casa now. Please run the following command by yourself"
    echo "    casa --nogui --nologfile -c ${CASAMS_EXE} | tee ${CASAMS_LOG}"
    echo ""
fi

echo "Done!"


