#!/bin/bash
#
LANG=C
# 
if [[ $# -lt 1 ]]; then
    echo Usage: CrabTable2latex sample.txt output.tex [-spacing 1.5 -delux]
    exit
else 
    inputfile="$1"
fi
if [[ $# -lt 2 ]]; then
    outputfile=$(echo "${1}.tex")
else 
    outputfile="$2"
fi
echo "Converting \"$inputfile\" to \"$outputfile\""
# 
# set output delux table
# 
# 
# read input arguments
# 
ct2latex_delux=0
ct2latex_spacing="2.5"
while (( "$#" )); do
    if [[ "$1" == "-spacing" ]]; then
        shift
        ct2latex_spacing=$1
    fi
    if [[ "$1" == "-delux" ]]; then
        ct2latex_delux=1
    fi
    shift
done
# 
# determine output file
# 
if [[ x"$outputfile" != x ]]; then
    if [[ $ct2latex_delux == 0 ]]; then
        echo ""                 > $outputfile
        echo "\begin{table}"   >> $outputfile   #[H]
        echo "  \centering"    >> $outputfile
        echo "  \small"        >> $outputfile
    else 
        echo ""                 > $outputfile
    fi
else
    echo "Error! Output file not given!"
    exit 1
fi
# 
# write latex begin tabular 
# 
if [[ $ct2latex_delux == 0 ]]; then
    printf "%s" "  \begin{tabular}{" >> $outputfile
else
    printf "%s" "\begin{deluxetable}{" >> $outputfile
fi
# 
# determin column number and write begin tabular
# 
ct2latex_ncol=0
# DO NOT USE THIS: 
# cat "$inputfile" | while read -r line; do
# SEE http://blog.schaal-24.de/skripte/bash/bash-variable-auserhalb-einer-while-schleife/?lang=en
# SEE http://unix.stackexchange.com/questions/9954/why-is-my-variable-being-localized-in-one-while-read-loop-but-not-in-another
while read -r line; do
    if [[ x"$line" != x ]]; then
        if [[ $(echo "$line" | grep -v -E "^[\|#]" | wc -l) -eq 1 ]]; then
            trimline=$(echo $line | sed -e 's/^ *//g')
            trimcoln=$(echo $trimline | tr -s ' ' | wc -w | sed -e 's/^ *//g')
            if [[ $ct2latex_ncol -lt $trimcoln ]]; then
                for (( ct2latex_icol=$ct2latex_ncol; ct2latex_icol<$trimcoln; ct2latex_icol++ )); do
                    printf "%s" "c" >> $outputfile
                done
                ct2latex_ncol=$trimcoln
            fi
        fi
    fi
done < "$inputfile"
# 
# write latex hline after begin tabular
# 
if [[ $ct2latex_delux == 0 ]]; then
    printf "%s\n%s\n%s\n" "}" "  \hline" "  \hline" >> $outputfile
else
    printf "%s\n%s\n%s\n%s\n%s\n"  \
            "}"                     \
            "    \tablecaption{"    \
            "        \label{Tab02}" \
            "    }"                 \
            "    \tablehead{"       >> $outputfile
fi
# 
# write header and examine each row
# 
ct2latex_head=()
ct2latex_head_written=0
ct2latex_strlens=()
ct2latex_ncolumn=0
while read -r line; do
    if [[ x"$line" != x ]]; then
        # write header
        if [[ $(echo "$line" | grep -E "^# " | wc -l) -eq 1 && "${#ct2latex_head}" -eq 0 ]]; then
            trimline=$(echo $line | sed -e 's/^# *//g')
            trimcoln=$(echo $trimline | tr -s ' ' | wc -w)
            trimcols=($(echo $trimline | tr -s ' ' | sed -e 's/_/\\_/g'))
            trimlens=trimcols
            if [[ $trimcoln -eq $ct2latex_ncol && $ct2latex_head -eq 0 ]]; then
              for (( trimcoli=0; trimcoli<$trimcoln; trimcoli++ )); do
                trimlen1=$(printf "%s" "${trimcols[$trimcoli]}")
                trimlen1=${#trimlen1}
                trimlen1=$(bc <<< $trimlen1*$ct2latex_spacing+1 | xargs printf "%.0f")
                trimlens[$trimcoli]=$trimlen1
                ##if [[ $trimlen1 -lt 15 ]]; then
                ##  trimlens[$trimcoli]=15
                ##else 
                ##  trimlens[$trimcoli]=$trimlen1
                ##fi
                #printf "%${trimlens[$trimcoli]}s" ${trimcols[$trimcoli]} >> $outputfile
                #if [[ "$trimcoli" != "$(bc <<< $trimcoln-1)" ]]; then
                #printf " %1s " "&" >> $outputfile
                #fi
              done
              #printf " %s\n%s\n" "\\\\" "  \hline" >> $outputfile
              ct2latex_head=("${trimcols[@]}")
              ct2latex_head_written=0 # we will wirte header after we have checked the first data line. 
              ct2latex_strlens=("${trimlens[@]}")
              ct2latex_ncolumn=$trimcoln
            fi
            #exit
        fi
        # examine content to get the text string width of each column
        if [[ $(echo "$line" | grep -v -E "^[\|#]" | wc -l) -eq 1 ]]; then
            # 
            # read data line
            trimline=$(echo $line | sed -e 's/^ *//g')
            trimcoln=$(echo $trimline | tr -s ' ' | wc -w)
            trimcols=($(echo $trimline | tr -s ' '))
            if [[ $ct2latex_head_written -eq 0 && $ct2latex_ncolumn -gt 0 ]]; then
              for (( trimcoli=0; trimcoli<$ct2latex_ncolumn; trimcoli++ )); do
                trimlen1=$(printf "%s" "${trimcols[$trimcoli]}")
                trimlen1=${#trimlen1}
                trimlen1=$(bc <<< $trimlen1*$ct2latex_spacing+1 | xargs printf "%.0f")
                if [[ $trimlen1 -gt ${ct2latex_strlens[$trimcoli]} ]]; then
                  #### echo $trimlen1 .gt. ${ct2latex_strlens[$trimcoli]}
                  ct2latex_strlens[$trimcoli]=$trimlen1
                fi
              done
            fi
        fi
    fi
done < "$inputfile"
# 
# read file again and write content rows
# 
while read -r line; do
    if [[ x"$line" != x ]]; then
        # write content
        if [[ $(echo "$line" | grep -v -E "^[\|#]" | wc -l) -eq 1 ]]; then
            # 
            # read data line
            trimline=$(echo $line | sed -e 's/^ *//g')
            trimcoln=$(echo $trimline | tr -s ' ' | wc -w)
            trimcols=($(echo $trimline | tr -s ' '))
            if [[ $ct2latex_head_written -eq 0 && $ct2latex_ncolumn -gt 0 ]]; then
              for (( trimcoli=0; trimcoli<$ct2latex_ncolumn; trimcoli++ )); do
                trimlen1=$(printf "%s" "${trimcols[$trimcoli]}")
                trimlen1=${#trimlen1}
                trimlen1=$(bc <<< $trimlen1*$ct2latex_spacing+1 | xargs printf "%.0f")
                if [[ $trimlen1 -gt ${ct2latex_strlens[$trimcoli]} ]]; then
                  #### echo $trimlen1 .gt. ${ct2latex_strlens[$trimcoli]}
                  ct2latex_strlens[$trimcoli]=$trimlen1
                fi
              done
            fi
            # 
            # write header after we have checked the first data line
            if [[ $ct2latex_head_written -eq 0 && $ct2latex_ncolumn -gt 0 ]]; then
              for (( trimcoli=0; trimcoli<$ct2latex_ncolumn; trimcoli++ )); do
                if [[ $ct2latex_delux == 0 ]]; then
                  printf "%${ct2latex_strlens[$trimcoli]}s" "${ct2latex_head[$trimcoli]}" >> $outputfile
                else
                  printf "%s{%s}" "        \colhead" "${ct2latex_head[$trimcoli]}" >> $outputfile
                fi
                
                if [[ "$trimcoli" -lt "$(bc <<< $ct2latex_ncolumn-1)" ]]; then 
                    if [[ $ct2latex_delux == 0 ]]; then
                        printf " & " >> $outputfile
                    else
                        printf "\t\t\t\t\t\t&\n" >> $outputfile
                    fi
                else
                    if [[ $ct2latex_delux == 0 ]]; then
                        printf " %s\n%s\n" \
                                "\\\\" \
                                "  \hline" >> $outputfile
                    else
                        printf "\t\t\t\t\t\t\n%s\n%s\n%s\n" \
                                "        %\tablenotemark{a}" \
                                "    }" \
                                "    \startdata" >> $outputfile
                    fi
                  break
                fi
              done
              ct2latex_head_written=1
            fi
            # 
            # write data line
            for (( trimcoli=0; trimcoli<$ct2latex_ncolumn; trimcoli++ )); do
                printf "%${ct2latex_strlens[$trimcoli]}s" ${trimcols[$trimcoli]} >> $outputfile
                if [[ "$trimcoli" -lt "$(bc <<< $ct2latex_ncolumn-1)" ]]; then
                  printf " %1s " "&" >> $outputfile
                else 
                  printf " %s\n" "\\\\" >> $outputfile
                  break
                fi
            done
            #exit
        fi
    fi
done < "$inputfile"
# 
# write latex end tabular
# 
if [[ $ct2latex_delux == 0 ]]; then
    printf "%s\n%s\n%s\n%s\n%s\n" \
            "  \hline" \
            "  \end{tabular}" \
            "  \caption{" \
            "  \label{Tab00}}" \
            "\end{table}" >> $outputfile
else
    printf "%s\n%s\n%s\n" \
            "    \enddata" \
            "    %\tablenotetext{a}{aaabbbccc} % after enddata" \
            "\end{deluxetable}" >> $outputfile
fi
# 
# print final latex table
# 
cat $outputfile



