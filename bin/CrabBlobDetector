#!/bin/bash
# 
# common caller for dzliu tools:
#=  CrabFitsHeader
#=  CrabFitsImageCrop
#=  CrabPhotAperPhot
#=  CrabPhotRingPhot
#=  CrabPhotImageStatistics
#=  CrabPhotMonteCarlo
#=  CrabTableReadColumn
#=  CrabTableReadInfo
#=  degree2radec
#=  radec2degree
#=  lumdist
#=  ttyecho
#=  float2hex
#=  hex2float
#=  double2hex
#=  hex2double
#=  pdbi-lmv-to-fits
#=  pdbi-uvt-to-fits
# 
# for ff in $(cat CrabFitsHeader | grep "^#= " | tr -s ' ' | cut -d ' ' -f 2); do cp CrabFitsHeader $ff; done
#   
# 
# Linux
if [[ $(uname -s) == Linux ]]; then
    crab_ldd=($(ldd --version | head -n 1 | perl -p -e 's/.* ([0-9.]*)/\1/g' | perl -p -e 's/\./ /g'))
    crab_bin="bin_linux"
    if [[ $(awk "BEGIN { if(0${crab_ldd[0]}==02) print 1; else print 0; }") -eq 1 ]]; then
        if [[ $(awk "BEGIN { if(0${crab_ldd[1]}<=013) print 1; else print 0; }") -eq 1 ]]; then
            crab_bin="bin_linux_Glibc_2.12" # For computer with old GLIBC version <TODO> Experimental
        elif [[ $(awk "BEGIN { if(0${crab_ldd[1]}<=017) print 1; else print 0; }") -eq 1 ]]; then
            crab_bin="bin_linux_Glibc_2.17" # For computer with old GLIBC version <TODO> Experimental
        fi
    fi
    $(dirname $0)/$crab_bin/$(basename $0)_linux_x86_64 "$@"
fi
# Darwin
if [[ $(uname -s) == Darwin ]]; then
    # otool -L --version
    $(dirname $0)/bin_mac/$(basename $0)_mac "$@"
fi
# Cygwin
if [[ $(uname -s) == *CYGWIN* ]]; then
    $(dirname $0)/bin_cygwin/$(basename $0)_cygwin_x86.exe "$@"
fi



